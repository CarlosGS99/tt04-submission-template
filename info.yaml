--- 
# TinyTapeout project information
project:  4 bit Shift/Add Unsigned Binary Multiplier
  wokwi_id:    0

 # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
 # Source files must be in ./src and you must list each source file separately
  source_files:     
    - multi_4bits.v
  top_module:  "tt_um_carlosgs99_multi_4bits"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x2"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Carlos Andrés Guerra"
  title:        "4 bit Shift/Add Unsigned Binary Multiplier"
  language:     "Verilog"
  description:  "Unsigned 4-bit binary multiplier, using the method of shift and add."      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      This project consist in an unsigned binary multiplier. The multiplier works using the method of shift and add.
      The multiplier works by multiplying inputs A and B, each of then with 4 bits, and calculating a resulting 8 bits product.
      

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      The multiplier calculates the product of two 4-bit numbers, inputs A and B, and sending this product to 8-bit output B.
      This project works as a secuential design so it needs a clock signal.
      For testing the project just connect the input pins to switches and the output pins to LEDs or a decoder and a display.
      If reset signal is enabled the output will turn to 0.

      As a master’s student at the University of Guadalajara in the area of digital circuits, 
      having the possibility to manufacture an integrated circuit could be a very significant
      achievement both for the professional growth at personal level and for the 
      complete career of the master’s degree in electronics and computing, which could lead 
      to more students interested in the area of integrated circuits.
# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - A[0]
    - A[1]
    - A[2]
    - A[3]
    - B[0]
    - B[1]
    - B[2]
    - B[3]
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - P[0]
    - P[1]
    - P[2]
    - P[3]
    - P[4]
    - P[5]
    - P[6]
    - P[7]
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - clk
    - rst
    - none
    - none
    - none
    - none
    - none
    - none
# The following fields are optional
  tag:          "4bit-multiplier, simulation, binary_multiplier"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
